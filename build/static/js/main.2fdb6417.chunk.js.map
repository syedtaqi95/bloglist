{"version":3,"sources":["components/BlogForm.js","components/Togglable.js","reducers/notificationReducer.js","services/blogs.js","services/users.js","reducers/userReducer.js","reducers/blogReducer.js","components/BlogList.js","components/Notification.js","services/login.js","reducers/loginReducer.js","components/LoginPage.js","components/Header.js","components/Users.js","components/User.js","components/Blog.js","App.js","store.js","index.js"],"names":["BlogForm","addBlog","useState","title","setTitle","author","setAuthor","url","setUrl","handleAddBlog","event","a","preventDefault","Form","onSubmit","Group","Label","Control","type","value","id","name","onChange","target","Button","variant","Togglable","React","forwardRef","props","ref","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","style","marginBottom","onClick","buttonLabel","children","displayName","timeoutId","baseUrl","token","blogService","getAll","axios","get","then","response","data","setToken","newToken","create","newObject","config","headers","Authorization","post","update","updatedObject","blogUrl","put","remove","blogToDelete","delete","comment","content","blogId","commentUrl","initialState","message","messageType","setNotification","time","dispatch","messageObject","clearTimeout","setTimeout","clearNotification","reducer","state","action","userService","updateUsers","users","updatedBlog","map","blog","deletedBlog","filter","BlogList","blogs","useSelector","useDispatch","blogFormRef","useRef","blogObject","current","newBlog","sort","b","likes","Card","body","to","className","Notification","notification","Alert","loginService","login","credentials","username","password","loggedInUser","setUsername","setPassword","setLoggedInUser","user","window","localStorage","setItem","JSON","stringify","LoginPage","history","useHistory","console","log","push","autoComplete","Header","margin","marginLeft","marginRight","Navbar","collapseOnSelect","expand","bg","Brand","Nav","Link","Toggle","aria-controls","Collapse","Text","removeItem","Users","Table","striped","length","User","match","useRouteMatch","find","u","params","ListGroup","Item","Blog","setComment","handleLike","receivedBlog","likeBlog","handleRemove","prompt","confirm","removeBlog","href","e","commentOnBlog","Row","Col","comments","App","useEffect","loggedInUserJSON","getItem","parsedUser","parse","path","combineReducers","notificationReducer","blogReducer","loginReducer","userReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2fdb6417.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport { Form, Button } from 'react-bootstrap'\n\nconst BlogForm = ({ addBlog }) => {\n  // States\n  const [title, setTitle] = useState('')\n  const [author, setAuthor] = useState('')\n  const [url, setUrl] = useState('')\n\n  // New blog event handler\n  const handleAddBlog = async (event) => {\n    event.preventDefault()\n    const newBlog = {\n      title: title,\n      author: author,\n      url: url,\n    }\n    addBlog(newBlog)\n    setTitle('')\n    setAuthor('')\n    setUrl('')\n  }\n\n  return (\n    <div>\n      <h3>create new</h3>\n\n      <Form onSubmit={handleAddBlog}>\n        <Form.Group>\n          <Form.Label>Title</Form.Label>\n          <Form.Control\n            type=\"text\"\n            value={title}\n            id=\"title\"\n            name=\"Title\"\n            onChange={({ target }) => setTitle(target.value)}\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Author</Form.Label>\n          <Form.Control\n            type=\"text\"\n            value={author}\n            id=\"author\"\n            name=\"Author\"\n            onChange={({ target }) => setAuthor(target.value)}\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>URL</Form.Label>\n          <Form.Control\n            type=\"text\"\n            value={url}\n            id=\"url\"\n            name=\"Url\"\n            onChange={({ target }) => setUrl(target.value)}\n          />\n        </Form.Group>\n        <Button variant=\"info\" type=\"submit\" id=\"create-button\">create</Button>\n      </Form>\n    </div>\n  )\n}\n\nexport default BlogForm","import React, { useImperativeHandle, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { Button } from 'react-bootstrap'\n\nconst Togglable = React.forwardRef((props, ref) => {\n  const [visible, setVisible] = useState(false)\n\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  useImperativeHandle(ref, () => {\n    return {\n      toggleVisibility\n    }\n  })\n\n  return (\n    <div style={{ marginBottom: 5 }}>\n      <div style={hideWhenVisible}>\n        <Button variant=\"info\" onClick={toggleVisibility}>{props.buttonLabel}</Button>\n      </div>\n      <div style={showWhenVisible}>\n        {props.children}\n        <Button variant=\"secondary\" onClick={toggleVisibility}>cancel</Button>\n      </div>\n    </div>\n  )\n})\n\nTogglable.displayName = 'Togglable'\n\nTogglable.propTypes = {\n  buttonLabel: PropTypes.string.isRequired\n}\n\nexport default Togglable","const initialState = {\n  message: null,\n  messageType: null\n}\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n  case 'SET_NOTIFICATION':\n    return action.messageObject\n  case 'CLEAR_NOTIFICATION':\n    return initialState\n  default:\n    return state\n  }\n}\n\nlet timeoutId\n\nexport const setNotification = (message, messageType, time = 5) => {\n  return async dispatch => {\n    dispatch({\n      type: 'SET_NOTIFICATION',\n      messageObject: {\n        message,\n        messageType\n      }\n    })\n    clearTimeout(timeoutId)\n    timeoutId = setTimeout(\n      () => dispatch(clearNotification()),\n      time * 1000\n    )\n  }\n}\n\nexport const clearNotification = () => {\n  return {\n    type: 'CLEAR_NOTIFICATION'\n  }\n}\n\nexport default reducer","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = async newObject => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst update = async updatedObject => {\n  const blogUrl = `${baseUrl}/${updatedObject.id}`\n  const response = await axios.put(blogUrl, updatedObject)\n  return response.data\n}\n\nconst remove = async blogToDelete => {\n  const blogUrl = `${baseUrl}/${blogToDelete.id}`\n  const config = {\n    headers: { Authorization: token },\n  }\n  const response = await axios.delete(blogUrl, config)\n  return response.data\n}\n\nconst comment = async (content, blogId) => {\n  const commentUrl = `${baseUrl}/${blogId}/comments`\n  const response = await axios.post(commentUrl, { comment: content })\n  return response.data\n}\n\nconst blogService = { getAll, setToken, create, update, remove, comment }\n\nexport default blogService","import axios from 'axios'\nconst baseUrl = '/api/users'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst userService = { getAll }\n\nexport default userService","import userService from '../services/users'\n\nconst reducer = (state = [], action) => {\n  switch (action.type) {\n  case 'UPDATE_USERS':\n    return action.data\n  default:\n    return state\n  }\n}\n\nexport const updateUsers = () => {\n  return async dispatch => {\n    const users = await userService.getAll()\n    dispatch({\n      type: 'UPDATE_USERS',\n      data: users\n    })\n  }\n}\n\nexport default reducer","import blogService from '../services/blogs'\nimport { setNotification } from './notificationReducer'\nimport { updateUsers } from '../reducers/userReducer'\n\nconst reducer = (state = [], action) => {\n  switch (action.type) {\n  case 'INIT_BLOGS':\n    return action.data\n\n  case 'ADD_BLOG':\n    return [...state, action.data]\n\n  case 'UPDATE_BLOG': {\n    const updatedBlog = action.data\n    const id = updatedBlog.id\n    return state.map(blog => blog.id === id ? updatedBlog : blog)\n  }\n\n  case 'DELETE_BLOG': {\n    const deletedBlog = action.data\n    return state.filter(blog => blog.id !== deletedBlog.id)\n  }\n\n  default:\n    return state\n  }\n}\n\nexport const initBlogs = () => {\n  return async dispatch => {\n    const blogs = await blogService.getAll()\n    dispatch({\n      type: 'INIT_BLOGS',\n      data: blogs\n    })\n  }\n}\n\nexport const createBlog = (blog) => {\n  return async dispatch => {\n    try {\n      const newBlog = await blogService.create(blog)\n      dispatch({\n        type: 'ADD_BLOG',\n        data: newBlog\n      })\n      dispatch(updateUsers())\n      dispatch(setNotification(\n        `added \"${blog.title}\" by ${blog.author}`,\n        'success'\n      ))\n    } catch (e) {\n      dispatch(setNotification(\n        `Failed to add \"${blog.title}\" by ${blog.author}`,\n        'danger'\n      ))\n    }\n  }\n}\n\nexport const likeBlog = (blog) => {\n  return async dispatch => {\n    try {\n      const updatedBlog = {\n        ...blog,\n        user: blog.user.id,\n        likes: blog.likes + 1\n      }\n      const receivedBlog = await blogService.update(updatedBlog)\n      dispatch({\n        type: 'UPDATE_BLOG',\n        data: receivedBlog\n      })\n    } catch (e) {\n      dispatch(setNotification(\n        `Failed to like \"${blog.title}\" by ${blog.author}`,\n        'danger'\n      ))\n    }\n  }\n}\n\nexport const removeBlog = (blog) => {\n  return async dispatch => {\n    try {\n      await blogService.remove(blog)\n      dispatch({\n        type: 'DELETE_BLOG',\n        data: blog\n      })\n      dispatch(updateUsers())\n      dispatch(setNotification(\n        `Deleted \"${blog.title}\" by ${blog.author}`,\n        'success'\n      ))\n    } catch (e) {\n      dispatch(setNotification(\n        `Failed to delete \"${blog.title}\" by ${blog.author}`,\n        'danger'\n      ))\n    }\n  }\n}\n\nexport const commentOnBlog = (comment, blog) => {\n  return async dispatch => {\n    try {\n      const receivedBlog = await blogService.comment(comment, blog.id)\n      dispatch({\n        type: 'UPDATE_BLOG',\n        data: receivedBlog\n      })\n    } catch (e) {\n      dispatch(setNotification(\n        `Failed to comment on ${blog.title}`,\n        'danger'\n      ))\n    }\n  }\n}\n\nexport default reducer","import React, { useRef } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Card } from 'react-bootstrap'\n\nimport BlogForm from './BlogForm'\nimport Togglable from './Togglable'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { createBlog } from '../reducers/blogReducer'\n\nconst BlogList = () => {\n  // Redux\n  const blogs = useSelector(state => state.blogs)\n  const dispatch = useDispatch()\n\n  // Refs\n  const blogFormRef = useRef()\n\n  // Sends a newly created blog to the server\n  const addBlog = (blogObject) => {\n    blogFormRef.current.toggleVisibility()\n    dispatch(createBlog(blogObject))\n  }\n\n  return (\n    <div>\n      <br />\n      <Togglable buttonLabel=\"create new blog\" ref={blogFormRef}>\n        <BlogForm addBlog={addBlog} />\n      </Togglable>\n      {[...blogs]\n        .sort((a, b) => b.likes - a.likes) // sorted by likes in descending order\n        .map(blog =>\n          <Card key={blog.id} body>\n            <Link to={`/blogs/${blog.id}`}>\n              <strong className=\"text-dark\">{blog.title} - {blog.author}</strong>\n            </Link>\n          </Card>\n        )}\n    </div>\n  )\n}\n\nexport default BlogList","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Alert } from 'react-bootstrap'\n\nconst Notification = () => {\n  const notification = useSelector(state => state.notification)\n  if (notification.message !== null) {\n    return (\n      <Alert variant={notification.messageType}>\n        {notification.message}\n      </Alert>\n    )\n  }\n\n  return null\n}\n\nexport default Notification","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async (credentials) => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nconst loginService = { login }\n\nexport default loginService","import blogService from '../services/blogs'\nimport loginService from '../services/login'\nimport { setNotification, clearNotification } from './notificationReducer'\n\nconst initialState = {\n  username: '',\n  password: '',\n  loggedInUser: null\n}\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n  case 'SET_USERNAME':\n    return { ...state, username: action.data }\n\n  case 'SET_PASSWORD':\n    return { ...state, password: action.data }\n\n  case 'SET_LOGGEDINUSER':\n    return { ...state, loggedInUser: action.data }\n\n  case 'LOGOUT':\n    return initialState\n\n  default:\n    return state\n  }\n}\n\nexport const setUsername = (username) => {\n  return {\n    type: 'SET_USERNAME',\n    data: username\n  }\n}\n\nexport const setPassword = (password) => {\n  return {\n    type: 'SET_PASSWORD',\n    data: password\n  }\n}\n\nexport const setLoggedInUser = (user) => {\n  // Update localStorage\n  window.localStorage.setItem(\n    'loggedInUser', JSON.stringify(user)\n  )\n  blogService.setToken(user.token)\n  return {\n    type: 'SET_LOGGEDINUSER',\n    data: user\n  }\n}\n\nexport const login = (username, password) => {\n  return async (dispatch) => {\n    try{\n      const user = await loginService.login({\n        username, password\n      })\n      dispatch(setLoggedInUser(user))\n      dispatch(setUsername(''))\n      dispatch(setPassword(''))\n      dispatch(clearNotification())\n    } catch (e) {\n      console.log(e)\n      dispatch(setNotification('wrong username or password', 'danger'))\n    }\n  }\n}\n\nexport const logout = () => {\n  return (dispatch) => {\n    blogService.setToken(null)\n    window.localStorage.removeItem('loggedInUser')\n    dispatch(setNotification('logged out', 'success'))\n    dispatch({\n      type: 'LOGOUT'\n    })\n  }\n}\n\nexport default reducer","import React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\n\nimport Notification from './Notification'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setUsername, setPassword } from '../reducers/loginReducer'\nimport { login } from '../reducers/loginReducer'\n\nconst LoginPage = () => {\n  const dispatch = useDispatch()\n  const username = useSelector(state => state.user.username)\n  const password = useSelector(state => state.user.password)\n\n  const history = useHistory()\n\n  // Login event handler\n  const handleLogin = (event) => {\n    event.preventDefault()\n    dispatch(login(username, password))\n    history.push('/')\n  }\n\n  return (\n    <div>\n      <h2>Log in to application</h2>\n      <Notification />\n      <Form onSubmit={handleLogin}>\n        <Form.Group>\n          <Form.Label>Username</Form.Label>\n          <Form.Control\n            type=\"text\"\n            id=\"username\"\n            value={username}\n            name=\"Username\"\n            onChange={({ target }) => dispatch(setUsername(target.value))}\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            id=\"password\"\n            value={password}\n            name=\"Password\"\n            onChange={({ target }) => dispatch(setPassword(target.value))}\n            autoComplete=\"current-password\"\n          />\n        </Form.Group>\n        <Button variant=\"info\" type=\"submit\" id=\"login-button\">login</Button>\n      </Form>\n    </div>\n  )\n}\n\nexport default LoginPage","import React from 'react'\nimport { Button, Navbar, Nav } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nimport Notification from './Notification'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { logout } from '../reducers/loginReducer'\nimport { useHistory } from 'react-router-dom'\n\nconst Header = () => {\n  const user = useSelector(state => state.user.loggedInUser)\n  const dispatch = useDispatch()\n\n  const history = useHistory()\n\n  // Logout event handler\n  const handleLogout = (event) => {\n    event.preventDefault()\n    dispatch(logout())\n    history.push('/')\n  }\n\n  const margin = {\n    marginLeft: 5,\n    marginRight: 5,\n  }\n\n  return (\n    <div>\n      <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n        <Navbar.Brand>\n          <LinkContainer className=\"text-info\" to='/'>\n            <Nav.Link>Blog App</Nav.Link>\n          </LinkContainer>\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <LinkContainer style={margin} to='/'>\n              <Nav.Link>Blogs</Nav.Link>\n            </LinkContainer>\n            <LinkContainer style={margin} to='/users'>\n              <Nav.Link>Users</Nav.Link>\n            </LinkContainer>\n            <Navbar.Text style={margin} className=\"text-info\">{user.name} logged in</Navbar.Text>\n            <Button variant=\"outline-info\" type=\"submit\" onClick={handleLogout}>logout</Button>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n      <Notification />\n    </div>\n  )\n}\n\nexport default Header","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { useSelector } from 'react-redux'\nimport { Table } from 'react-bootstrap'\n\nconst Users = () => {\n  const users = useSelector(state => state.users)\n\n  return (\n    <div>\n      <h3>Users</h3>\n      <Table striped>\n        <thead>\n          <tr>\n            <th></th>\n            <th>Blogs created</th>\n          </tr>\n        </thead>\n        <tbody>\n          {[...users]\n            .map(user => {\n              return (\n                <tr key={user.id}>\n                  <td>\n                    <Link to={`/users/${user.id}`}>\n                      <strong className=\"text-dark\">{user.name}</strong>\n                    </Link>\n                  </td>\n                  <td>{user.blogs.length}</td>\n                </tr>\n              )\n            })}\n        </tbody>\n      </Table>\n    </div>\n  )\n}\n\nexport default Users","import React from 'react'\nimport { Link, useRouteMatch } from 'react-router-dom'\n\nimport { useSelector } from 'react-redux'\nimport { ListGroup } from 'react-bootstrap'\n\nconst User = () => {\n  const users = useSelector(state => state.users)\n\n  // find user info if in individual user view\n  const match = useRouteMatch('/users/:id')\n  const user = match\n    ? users.find(u => u.id === match.params.id)\n    : null\n\n  if (!user) {\n    return null\n  }\n\n  return (\n    <div>\n      <h3>{user.name}</h3>\n      <h4>added blogs</h4>\n      <ListGroup>\n        {user.blogs.map(blog => (\n          <ListGroup.Item key={blog.id}>\n            <Link to={`/blogs/${blog.id}`}><strong className=\"text-dark\">{blog.title}</strong></Link>\n          </ListGroup.Item>\n        ))}\n      </ListGroup>\n    </div>\n  )\n}\n\nexport default User","import React, { useState } from 'react'\nimport { useHistory, useRouteMatch } from 'react-router-dom'\n\nimport { useSelector, useDispatch } from 'react-redux'\nimport { likeBlog, removeBlog, commentOnBlog } from '../reducers/blogReducer'\nimport { Button, Form, Row, Col, ListGroup } from 'react-bootstrap'\n\nconst Blog = () => {\n  // React states\n  const [comment, setComment] = useState('')\n\n  // Redux\n  const blogs = useSelector(state => state.blogs)\n  const loggedInUser = useSelector(state => state.user.loggedInUser)\n  const dispatch = useDispatch()\n\n  const history = useHistory()\n\n  // Find blog if in individual blog view\n  const match = useRouteMatch('/blogs/:id')\n  const blog = match\n    ? blogs.find(blog => blog.id === match.params.id)\n    : null\n\n  if (!blog) {\n    return null\n  }\n\n  // Adds a like and sends a server request\n  const handleLike = (blog) => {\n    dispatch(likeBlog(blog))\n  }\n\n  // Asks for confirmation, then sends a delete request to the server\n  const handleRemove = (blogToDelete) => {\n    const prompt = `Remove blog '${blogToDelete.title}' by ${blogToDelete.author}?`\n    if (window.confirm(prompt)) {\n      dispatch(removeBlog(blogToDelete))\n      history.push('/') // Redirect to home page\n    }\n  }\n\n  // Add comment event handler\n  const handleAddComment = (e) => {\n    e.preventDefault()\n    dispatch(commentOnBlog(comment, blog))\n    setComment('')\n  }\n\n  // Sets the display for 'Remove' button only if logged in user is the creator\n  const displayRemoveButton = () => {\n    return blog.user.id === loggedInUser.id ? '' : 'none'\n  }\n\n  return (\n    <div className=\"blogDetailedView\">\n      <h3>{blog.title} - {blog.author}</h3>\n\n      <a className=\"urlDiv\" href={`https://${blog.url}`}>\n        {blog.url}\n      </a>\n      <div className=\"likesDiv\">\n        likes {blog.likes}\n        <Button variant=\"info\" onClick={() => handleLike(blog)} className=\"likeButton\">like</Button>\n      </div>\n      <div>\n        added by {blog.user.name}\n      </div>\n      <div style={{ display: displayRemoveButton(blog) }}>\n        <Button variant=\"info\" onClick={() => handleRemove(blog)} className=\"removeButton\">remove</Button>\n      </div>\n\n      <h3>comments</h3>\n      <Form onSubmit={handleAddComment}>\n        <Row>\n          <Col>\n            <Form.Control\n              type=\"text\"\n              value={comment}\n              id=\"comment\"\n              name=\"Comment\"\n              onChange={({ target }) => setComment(target.value)}\n            />\n          </Col>\n          <Col>\n            <Button variant=\"info\" type=\"submit\">add comment</Button>\n          </Col>\n        </Row>\n      </Form>\n      <br />\n      <ListGroup>\n        {blog.comments.map(comment => (\n          <ListGroup.Item key={comment}>{comment}</ListGroup.Item>\n        ))}\n      </ListGroup>\n    </div>\n  )\n}\n\nexport default Blog","import React, { useEffect } from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\nimport BlogList from './components/BlogList'\nimport LoginPage from './components/LoginPage'\nimport Header from './components/Header'\nimport Users from './components/Users'\nimport User from './components/User'\nimport Blog from './components/Blog'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { initBlogs } from './reducers/blogReducer'\nimport { setLoggedInUser } from './reducers/loginReducer'\nimport { updateUsers } from './reducers/userReducer'\n\nconst App = () => {\n  // Redux store\n  const dispatch = useDispatch()\n  const loggedInUser = useSelector(state => state.user.loggedInUser)\n\n  // Get blogs on page render\n  useEffect(() => dispatch(initBlogs()), [])\n\n  // Get users on page render\n  useEffect(() => dispatch(updateUsers()), [])\n\n  // Get loggedinUser from localStorage on page render\n  useEffect(() => {\n    const loggedInUserJSON = window.localStorage.getItem('loggedInUser')\n    if (loggedInUserJSON) {\n      const parsedUser = JSON.parse(loggedInUserJSON)\n      dispatch(setLoggedInUser(parsedUser))\n    }\n  }, [])\n\n  return (\n    <div className=\"container bg-light\">\n      { loggedInUser === null ?\n        <LoginPage /> :\n        <div>\n          <Header />\n          <Switch>\n            <Route path='/users/:id'>\n              <User />\n            </Route>\n            <Route path='/users'>\n              <Users />\n            </Route>\n            <Route path='/blogs/:id'>\n              <Blog />\n            </Route>\n            <Route path='/'>\n              <BlogList />\n            </Route>\n          </Switch>\n        </div>\n      }\n    </div>\n  )\n}\n\nexport default App","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport thunk from 'redux-thunk'\n\nimport notificationReducer from './reducers/notificationReducer'\nimport blogReducer from './reducers/blogReducer'\nimport loginReducer from './reducers/loginReducer'\nimport userReducer from './reducers/userReducer'\n\nconst reducer = combineReducers({\n  notification: notificationReducer,\n  blogs: blogReducer,\n  user: loginReducer,\n  users: userReducer,\n})\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(\n    applyMiddleware(thunk)\n  )\n)\n\nexport default store","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\nimport { Provider } from 'react-redux'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport store from './store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n)"],"sourceRoot":""}